name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
          
      - name: Check formatting
        run: cargo fmt --all --check

  build:
    runs-on: self-hosted
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build-cache"
          
      - name: cargo build without flags
        run: cargo build
        
      - name: cargo check warnings
        run: RUSTFLAGS="-D warnings" cargo check
   
      - name: Compile tests
        run: cargo test --no-run

      - name: Run tests for tee-service
        run: |
          cd tee-service
          # Capture the output of cargo test --no-run and filter for relevant binaries
          binaries=$(cargo test --no-run 2>&1 | grep -oP "../target/debug/deps/tee_service-[a-z0-9]+(?!\.d)")
          for binary in $binaries; do
            echo "Running binary: $binary"
            sudo "$binary"
          done

      - name: Run tests for tee-service-api
        run: |
          cd tee-service-api
          # Capture the output of cargo test --no-run and filter for relevant binaries
          binaries=$(cargo test --no-run 2>&1 | grep -oP "../target/debug/deps/tee_service_api-[a-z0-9]+(?!\.d)")
          for binary in $binaries; do
            echo "Running binary: $binary"
            sudo "$binary"
          done

